#!/bin/bash
usage() {
    echo "usage: git-force-pull (nostash) (nofetch) BRANCH"
    echo ""
    echo "  Fetch and checkout a clean branch from the specified remote."
    echo ""
    echo "  BRANCH can be 'current_branch' to specify the branch currently checked-out."

    if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
        # sourced...
        return 1
    else
        # regular call
        exit 1
    fi
}

STASH=1
if [ "$1" == "nostash" ]; then
    STASH=0
    shift
fi

FETCH=1
if [ "$1" == "nofetch" ]; then
    FETCH=0
    shift
fi

if [ $# = 1 ]; then
    ORIGIN=origin
    BRANCH=$1
else
    ORIGIN=$1
    BRANCH=$2
fi

if [ -z "$BRANCH" ]; then
    usage
fi

set -ex
if [ "$BRANCH" == "current_branch" ]; then
    BRANCH=`git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
fi

if [ $STASH == 1 ]; then
    git-stash trydrop git-force-pull
    git-stash push git-force-pull
    git checkout $BRANCH
    git-stash trypop git-force-pull
else
    git checkout $BRANCH
fi

if [ "`git branch --list tmp-git-force-pull`" ]; then
    git branch -D tmp-git-force-pull
fi

git checkout -b tmp-git-force-pull
if [ $FETCH == 1 ]; then
    git fetch $ORIGIN +$BRANCH:$BRANCH
fi
if [ $STASH == 1 ]; then
    git-stash trydrop git-force-pull
    git-stash push git-force-pull
    git checkout $BRANCH
    git-stash trypop git-force-pull
else
    git checkout $BRANCH
fi
git branch -D tmp-git-force-pull
